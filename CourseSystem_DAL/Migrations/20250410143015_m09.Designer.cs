// <auto-generated />
using System;
using CourseSystem_DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseSystem_DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250410143015_m09")]
    partial class m09
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseSystem_DAL.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e33dd1b-3a4d-48f5-84c1-565170287dbf"),
                            DepartmentId = new Guid("045e90a9-bd08-45ae-80c7-fa8ee939fd74"),
                            Duration = 4,
                            InstructorId = new Guid("0e65f178-8ad3-442b-859f-48d6d964b044"),
                            Name = "C#"
                        },
                        new
                        {
                            Id = new Guid("2ce2280b-8172-4045-8bdc-270794694177"),
                            DepartmentId = new Guid("c11ea3d8-7da5-44bd-a313-e1a6fbafad79"),
                            Duration = 5,
                            InstructorId = new Guid("30a2d33f-c405-4b72-a7ad-b21e630ada5e"),
                            Name = "Java 0Script"
                        },
                        new
                        {
                            Id = new Guid("5ef659b6-d082-41d0-8f5d-984d883a3482"),
                            DepartmentId = new Guid("cb84409a-44b6-49fa-8a67-92ae33862119"),
                            Duration = 6,
                            InstructorId = new Guid("8c8e5e8e-2210-4c96-9a78-51f66471627b"),
                            Name = "Secuirety"
                        },
                        new
                        {
                            Id = new Guid("f78d5fdf-66b7-44be-b9f2-1e42be682a74"),
                            DepartmentId = new Guid("d5b7c05f-4fbf-44c3-b181-2176aa8ea9e2"),
                            Duration = 7,
                            InstructorId = new Guid("a7405fe2-f9ff-488c-937b-ff60e3e9c24d"),
                            Name = "Flutter"
                        },
                        new
                        {
                            Id = new Guid("fe17271a-1f45-4a17-b661-30fc9b377f98"),
                            DepartmentId = new Guid("d67ae4ea-6fb4-4dbd-af73-90192db76b5a"),
                            Duration = 8,
                            InstructorId = new Guid("b6e66f14-8e6d-4c03-9c12-753ed9e4f74d"),
                            Name = "Azure"
                        });
                });

            modelBuilder.Entity("CourseSystem_DAL.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("045e90a9-bd08-45ae-80c7-fa8ee939fd74"),
                            ManagerId = new Guid("0e65f178-8ad3-442b-859f-48d6d964b044"),
                            Name = "SD"
                        },
                        new
                        {
                            Id = new Guid("c11ea3d8-7da5-44bd-a313-e1a6fbafad79"),
                            ManagerId = new Guid("30a2d33f-c405-4b72-a7ad-b21e630ada5e"),
                            Name = "UI"
                        },
                        new
                        {
                            Id = new Guid("cb84409a-44b6-49fa-8a67-92ae33862119"),
                            ManagerId = new Guid("8c8e5e8e-2210-4c96-9a78-51f66471627b"),
                            Name = "Network"
                        },
                        new
                        {
                            Id = new Guid("d5b7c05f-4fbf-44c3-b181-2176aa8ea9e2"),
                            ManagerId = new Guid("a7405fe2-f9ff-488c-937b-ff60e3e9c24d"),
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("d67ae4ea-6fb4-4dbd-af73-90192db76b5a"),
                            ManagerId = new Guid("b6e66f14-8e6d-4c03-9c12-753ed9e4f74d"),
                            Name = "Cloud"
                        });
                });

            modelBuilder.Entity("CourseSystem_DAL.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e65f178-8ad3-442b-859f-48d6d964b044"),
                            FirstName = "Mohamed",
                            LastName = "Ziad",
                            Phone = "01120210123"
                        },
                        new
                        {
                            Id = new Guid("30a2d33f-c405-4b72-a7ad-b21e630ada5e"),
                            FirstName = "Basem",
                            LastName = "Ahmed",
                            Phone = "01020210541"
                        },
                        new
                        {
                            Id = new Guid("8c8e5e8e-2210-4c96-9a78-51f66471627b"),
                            FirstName = "Ahmed",
                            LastName = "Omer",
                            Phone = "01020210789"
                        },
                        new
                        {
                            Id = new Guid("a7405fe2-f9ff-488c-937b-ff60e3e9c24d"),
                            FirstName = "Amr",
                            LastName = "Mohamed",
                            Phone = "01520210246"
                        },
                        new
                        {
                            Id = new Guid("b6e66f14-8e6d-4c03-9c12-753ed9e4f74d"),
                            FirstName = "Ali",
                            LastName = "Basem",
                            Phone = "01220210456"
                        },
                        new
                        {
                            Id = new Guid("c8b09a7f-0c3a-4a97-b586-55f23cfed9a6"),
                            FirstName = "Omer",
                            LastName = "Ali",
                            Phone = "01220210897"
                        },
                        new
                        {
                            Id = new Guid("e44c2c5d-9de9-45b4-814a-03169fc4edd1"),
                            FirstName = "Ziad",
                            LastName = "Amr",
                            Phone = "01120210827"
                        });
                });

            modelBuilder.Entity("CourseSystem_DAL.Course", b =>
                {
                    b.HasOne("CourseSystem_DAL.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseSystem_DAL.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseSystem_DAL.Department", b =>
                {
                    b.HasOne("CourseSystem_DAL.Instructor", "Manager")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("CourseSystem_DAL.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("CourseSystem_DAL.Instructor", b =>
                {
                    b.HasOne("CourseSystem_DAL.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseSystem_DAL.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("CourseSystem_DAL.Instructor", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("ManagedDepartment");
                });
#pragma warning restore 612, 618
        }
    }
}
